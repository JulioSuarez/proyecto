import{l as m}from"./index-e3f35709.js";console.log("hola de socket_client.js");const o=m("http://localhost:3000",{transports:["websocket"]});o.on("connect",function(e){console.log("conectado con el servidor desde socket_client.js")});o.on("disconnecte",function(e){console.log("perdimos conexion con el servidor desde client_socket.js")});console.log("hola de google-mett-socket.js");console.log("hola de google-mett-socket.js");console.log("hola de google-mett-socket.js");let l=!1,a=!1;const{RTCPeerConnection:f,RTCSessionDescription:s}=window,c=new f;function i(){document.querySelectorAll(".active-user.active-user--selected").forEach(t=>{t.setAttribute("class","active-user")})}function g(e){const t=document.createElement("div"),n=document.createElement("p");return t.setAttribute("class","active-user"),t.setAttribute("id",e),n.setAttribute("class","username"),n.innerHTML=`Socket: ${e}`,t.appendChild(n),t.addEventListener("click",()=>{i(),t.setAttribute("class","active-user active-user--selected");const r=document.getElementById("talking-with-info");r.innerHTML=`Talking with: "Socket: ${e}"`,d(e)}),t}async function d(e){const t=await c.createOffer();await c.setLocalDescription(new s(t)),o.emit("call-user",{offer:t,to:e})}function k(e){const t=document.getElementById("active-user-container");e.forEach(n=>{if(!document.getElementById(n)){const u=g(n);t.appendChild(u)}})}o.on("update-user-list",({users:e})=>{k(e)});o.on("remove-user",({socketId:e})=>{const t=document.getElementById(e);t&&t.remove()});o.on("call-made",async e=>{if(console.log("call-made",e),a&&!confirm(`El Usuario "Socket: ${e.socket}" quiere llamrate.  Aceptas la llamda?`)){o.emit("reject-call",{from:e.socket});return}await c.setRemoteDescription(new s(e.offer));const t=await c.createAnswer();await c.setLocalDescription(new s(t)),console.log("listo para ejecutar make-answer"),o.emit("make-answer",{answer:t,to:e.socket}),a=!0});o.on("answer-made",async e=>{await c.setRemoteDescription(new s(e.answer)),l||(d(e.socket),l=!0)});o.on("call-rejected",e=>{alert(`User: "Socket: ${e.socket}" rejected your call.`),i()});c.ontrack=function({streams:[e]}){const t=document.getElementById("remote-video");t&&(t.srcObject=e)};navigator.getUserMedia({video:!0,audio:!0},e=>{const t=document.getElementById("local-video");t&&(t.srcObject=e),e.getTracks().forEach(n=>c.addTrack(n,e))},e=>{console.warn(e.message)});
